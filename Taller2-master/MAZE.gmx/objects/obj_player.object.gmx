<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>velocidad = 4;

blackkey = false;
redkey = false;
yellowkey = false;
purplekey = false;
greykey = false;
diamante = false;
pear = false;
pineapple = false;
pear2 = false;
pineapple2 = false;
pineapple3 = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// movimiento del jugador

if (keyboard_check(vk_left))
    {
    if (!place_meeting(x-velocidad,y,obj_wall))&amp;&amp;(!place_meeting(x-velocidad,y,obj_puertaPadre))&amp;&amp;(!place_meeting(x-velocidad,y,obj_door))
    {x = x -velocidad;}
    }
    
if (keyboard_check(vk_right))
    {
    if (!place_meeting(x+velocidad,y,obj_wall))&amp;&amp;(!place_meeting(x+velocidad,y,obj_puertaPadre))&amp;&amp;(!place_meeting(x+velocidad,y,obj_door))
    {x = x + velocidad;}
    }
    
if (keyboard_check(vk_up))
    {
    if (!place_meeting(x,y-velocidad,obj_wall))&amp;&amp;(!place_meeting(x,y-velocidad,obj_puertaPadre))&amp;&amp;(!place_meeting(x,y-velocidad,obj_door))
    {y = y - velocidad;}
    }
    
if (keyboard_check(vk_down))
    {
    if (!place_meeting(x,y+velocidad,obj_wall))&amp;&amp;(!place_meeting(x,y+velocidad,obj_puertaPadre))&amp;&amp;(!place_meeting(x,y+velocidad,obj_door))
    {y = y + velocidad;}
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gestion de LLaves

if (place_meeting(x,y, obj_blackKey))
    {
    with(obj_blackKey){instance_destroy();}
    blackkey = true
    audio_play_sound(snd_diamond, 10, false);
    }
    
if (place_meeting(x,y, obj_RedKey))
    {
    with(obj_RedKey){instance_destroy();}
    redkey = true
    audio_play_sound(snd_diamond, 10, false);
    }
    
if (place_meeting(x,y, obj_YellowKey))
    {
    with(obj_YellowKey){instance_destroy();}
    yellowkey = true
    audio_play_sound(snd_diamond, 10, false);
    }
    
if (place_meeting(x,y, obj_PurpleKey))
    {
    with(obj_PurpleKey){instance_destroy();}
    purplekey = true
    audio_play_sound(snd_diamond, 10, false);
    }
    
if (place_meeting(x,y, obj_GreyKey))
    {
    with(obj_GreyKey){instance_destroy();}
    greykey = true
    audio_play_sound(snd_diamond, 10, false);
    }            
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gestion de puertas

if(blackkey)
    {
    if(place_meeting(x+velocidad, y, obj_blackdoor))||
    (place_meeting(x-velocidad, y, obj_blackdoor))||
    (place_meeting(x,y+velocidad, obj_blackdoor))||
    (place_meeting(x,y-velocidad, obj_blackdoor))
        {
        with(obj_blackdoor){instance_destroy();}
        audio_play_sound(snd_door, 10, false);
        }
    }

if(redkey)
    {
    if(place_meeting(x+velocidad, y, obj_reddoor))||
    (place_meeting(x-velocidad, y, obj_reddoor))||
    (place_meeting(x, y+velocidad, obj_reddoor))||
    (place_meeting(x, y-velocidad, obj_reddoor))
        {
        with(obj_reddoor){instance_destroy();}
        audio_play_sound(snd_door, 10, false);
        }
    }
    
if(yellowkey)
    {
    if(place_meeting(x+velocidad, y, obj_yellowdoor))||
    (place_meeting(x-velocidad, y, obj_yellowdoor))||
    (place_meeting(x,y+velocidad, obj_yellowdoor))||
    (place_meeting(x,y-velocidad, obj_yellowdoor))
        {
        with(obj_yellowdoor){instance_destroy();}
        audio_play_sound(snd_door, 10, false);
        }
    }
if(purplekey)
    {
    if(place_meeting(x+velocidad, y, obj_purpledoor))||
    (place_meeting(x-velocidad, y, obj_purpledoor))||
    (place_meeting(x,y+velocidad, obj_purpledoor))||
    (place_meeting(x,y-velocidad, obj_purpledoor))
        {
        with(obj_purpledoor){instance_destroy();}
        audio_play_sound(snd_door, 10, false);
        }
    }

if(greykey)
    {
    if(place_meeting(x+velocidad, y, obj_greydoor))||
    (place_meeting(x-velocidad, y, obj_greydoor))||
    (place_meeting(x,y+velocidad, obj_greydoor))||
    (place_meeting(x,y-velocidad, obj_greydoor))
        {
        with(obj_greydoor){instance_destroy();}
        audio_play_sound(snd_door, 10, false);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gestion de diamante

if (place_meeting(x,y, obj_diamond))
    {
    with(obj_diamond){instance_destroy();}
    diamante = true
    audio_play_sound(snd_diamond, 10, false);
    }
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gestion de puertas rojas

if(diamante)
    {
    if(place_meeting(x+velocidad, y, obj_door))||
    (place_meeting(x-velocidad, y, obj_door))||
    (place_meeting(x,y+velocidad, obj_door))||
    (place_meeting(x,y-velocidad, obj_door))
        {
        with(obj_door){instance_destroy();}
        audio_play_sound(snd_door, 10, false);
        }
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gestion puerta pirple

if(pear) &amp;&amp; (pineapple) &amp;&amp; (pear2) &amp;&amp; (pineapple2) &amp;&amp; (pineapple3) then
    {
    if(place_meeting(x+velocidad, y, obj_pirplelock))||
    (place_meeting(x-velocidad, y, obj_pirplelock))||
    (place_meeting(x,y+velocidad, obj_pirplelock))||
    (place_meeting(x,y-velocidad, obj_pirplelock))
        {
        with(obj_pirplelock){instance_destroy();}
        audio_play_sound(snd_door, 10, false);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// gestion de frutas

if (place_meeting(x,y, obj_pear))
    {
    with(obj_pear){instance_destroy();}
    pear = true
    audio_play_sound(snd_diamond, 10, false);
    }
    
if (place_meeting(x,y, obj___pineapple))
    {
    with(obj___pineapple){instance_destroy();}
    pineapple = true
    audio_play_sound(snd_diamond, 10, false);
    }
    
if (place_meeting(x,y, obj___pineapple2))
    {
    with(obj___pineapple2){instance_destroy();}
    pineapple2 = true
    audio_play_sound(snd_diamond, 10, false);
    }
    
if (place_meeting(x,y, obj___pineapple3))
    {
    with(obj___pineapple3){instance_destroy();}
    pineapple3 = true
    audio_play_sound(snd_diamond, 10, false);
    }
    
if (place_meeting(x,y, obj_pear2))
    {
    with(obj_pear2){instance_destroy();}
    pear2 = true
    audio_play_sound(snd_diamond, 10, false);
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyPadre">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
audio_play_sound(snd_dead, 10, false);
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_goal">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_goal, 10, false);

if (room_exists(room_next(room)))
    {room_goto_next();}
    else
    {room_goto(Inicio);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
